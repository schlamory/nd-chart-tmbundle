<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby
require ENV["ND_CHART_BUNDLE"] + "/src/nd.rb"
dict = Nd::Dictionary.new.tap {|d| d.name = 'icd9_dictionary' }

line = gets

class String
  def is_code?
    !(self =~ /^[a-zA-Z]?\d+\.?\d*$/).nil?
  end
end

type = nil
if !(ENV["TM_FILEPATH"] =~ /problems\.yml/ ).nil? and 
    !(line =~ /(\s*)diagnosis\:\s*(.*)\s*$/ ).nil?
  type = "diagnosis"
  indent, words = $1, $2.split(/\s+/)
else
  words = line.scan(/[^\s]+/).to_a
end

if words.last.is_code?
  code = words.pop
  key = words.join(" ")
  dict.insert key, [code]
else 
  key = words.join " "
  code = "unk" 
  keywords = words.clone
  keywords.each do |w|
    k = keywords.join " "
    row = dict.best_row_for_key(k)
    if dict.key_row_match_score(k,row) &gt; 0.95
      key = row[0]
      code = row[1]
      words = keywords
      break
    end
    keywords.shift
  end
end

case type
when "diagnosis"
  print "#{indent}diagnosis: #{key}\n#{indent}icd9: #{code}"
else  
  print line.gsub(/#{words.join '\s+'}\s+(#{code}\s+)?/, key) + " (#{code})"
end
</string>
	<key>input</key>
	<string>line</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>name</key>
	<string>ICD</string>
	<key>outputCaret</key>
	<string>afterOutput</string>
	<key>outputFormat</key>
	<string>text</string>
	<key>outputLocation</key>
	<string>replaceInput</string>
	<key>tabTrigger</key>
	<string>icd</string>
	<key>uuid</key>
	<string>17F1D3C9-3F71-4D66-ADF4-C4E185709097</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
